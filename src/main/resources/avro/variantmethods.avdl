@namespace("org.ga4gh.methods")
protocol VariantMethods {

import idl "methods.avdl";
import idl "variants.avdl";

/******************  /variantsets/search  *********************/
/** This request maps to the body of `POST /variantsets/search` as JSON. */
record SearchVariantSetsRequest {
  /**
  If specified, will restrict the query to variant sets within the
  given datasets.
  */
  array<string> datasetIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /variantsets/search` expressed as JSON. */
record SearchVariantSetsResponse {
  /** The list of matching variant sets. */
  array<org.ga4gh.models.VariantSet> variantSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `VariantSet` matching the search criteria.

`POST /variantsets/search` must accept a JSON version of
`SearchVariantSetsRequest` as the post body and will return a JSON version
of `SearchVariantSetsResponse`.
*/
SearchVariantSetsResponse searchVariantSets(
  /** This request maps to the body of `POST /variantsets/search` as JSON. */
  SearchVariantSetsRequest request) throws GAException;

/******************  /variants/search  *********************/
/** This request maps to the body of `POST /variants/search` as JSON. */
record SearchVariantsRequest {
  /** Required. The IDs of the variant sets to search over. */
  array<string> variantSetIds = [];

  /** Only return variants which have exactly this name. */
  union { null, string } variantName = null;

  /**
  Only return variant calls which belong to call sets with these IDs.
  If an empty array, returns variants without any call objects.
  If null, returns all variant calls.
  */
  union { null, array<string> } callSetIds = null;

  /**
  Only return variant annotations  with these effects (SO term IDs).
  If null, returns all variant annotations.
  */
  union { null, array<string> } effects = null;

  /**
  Only return variants annotated with any of these genes
  Todo: Merge with genome annotation gene model
  */
  union { null, array<string> } geneIds;

  /**
  Only return variants annotated with any of these transcript IDs
  Todo: Merge with genome annotation transcript model
  */
  union { null, array<string> } transcriptIds;


  /** Required. Only return variants on this reference. */
  string referenceName;

  /**
  Required. The beginning of the window (0-based, inclusive) for
  which overlapping variants should be returned.
  Genomic positions are non-negative integers less than reference length.
  Requests spanning the join of circular genomes are represented as
  two requests one on each side of the join (position 0).
  */
  long start;

  /**
  Required. The end of the window (0-based, exclusive) for which overlapping
  variants should be returned.
  */
  long end;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /variants/search` expressed as JSON. */
record SearchVariantsResponse {
  /**
  The list of matching variants.
  If the `callSetId` field on the returned calls is not present,
  the ordering of the call sets from a `SearchCallSetsRequest`
  over the parent `VariantSet` is guaranteed to match the ordering
  of the calls on each `Variant`. The number of results will also be
  the same.
  */
  array<org.ga4gh.models.Variant> variants = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Variant` matching the search criteria.

`POST /variants/search` must accept a JSON version of `SearchVariantsRequest`
as the post body and will return a JSON version of `SearchVariantsResponse`.
*/
SearchVariantsResponse searchVariants(
  /** This request maps to the body of `POST /variants/search` as JSON. */
  SearchVariantsRequest request) throws GAException;

/******************  /callsets/search  *********************/
/** This request maps to the body of `POST /callsets/search` as JSON. */
record SearchCallSetsRequest {
  /**
  If specified, will restrict the query to call sets within the
  given variant sets.
  */
  array<string> variantSetIds = [];

  /**
  Only return call sets for which a substring of the name matches this
  string.
  */
  union { null, string } name = null;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /callsets/search` expressed as JSON. */
record SearchCallSetsResponse {
  /** The list of matching call sets. */
  array<org.ga4gh.models.CallSet> callSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `CallSet` matching the search criteria.

`POST /callsets/search` must accept a JSON version of `SearchCallSetsRequest`
as the post body and will return a JSON version of `SearchCallSetsResponse`.
*/
SearchCallSetsResponse searchCallSets(
  /** This request maps to the body of `POST /callsets/search` as JSON. */
  SearchCallSetsRequest request) throws GAException;

/****************  /callsets/{id}  *******************/
/**
Gets a `CallSet` by ID.
`GET /callsets/{id}` will return a JSON version of `CallSet`.
*/
org.ga4gh.models.CallSet getCallSet(
  /**
  The ID of the `CallSet`.
  */
  string id) throws GAException;

}
